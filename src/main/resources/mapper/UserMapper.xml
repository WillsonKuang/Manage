<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.willson.mapper.UserMapper">

    <sql id="operate_table">
		tb_sys_user_info
	</sql>
    <sql id="user_role_table">
		tb_sys_user_role
	</sql>

    <resultMap id="BaseResultMap" type="user">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="DATE"/>
        <result column="modified_time" property="modifiedTime" jdbcType="DATE"/>
    </resultMap>

    <resultMap id="User_Role_ResultMap" type="user">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="DATE"/>
        <result column="modified_time" property="modifiedTime" jdbcType="DATE"/>
        <collection property="roles" ofType="com.willson.pojo.Role" columnPrefix="r_" fetchType="lazy">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="name" property="name" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, username, nickname, password, create_time, modified_time
    </sql>

    <sql id="User_Role_Column_List">
        u.id, u.username, u.nickname, r.id r_id, r.name r_name
    </sql>

    <insert id="insert" parameterType="user">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">  <!-- 在添加完后返回id -->
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into
        <include refid="operate_table"/>
        (username, password, nickname, create_time, modified_time) values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{nickname,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{modifiedTime,jdbcType=DATE})
    </insert>

    <insert id="insertUserRole" parameterType="java.util.Map">
        <selectKey keyProperty="id" resultType="java.lang.Long" order="AFTER">  <!-- 在添加完后返回id -->
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into
        <include refid="user_role_table"/>
        (user_id, role_id) values (#{userId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT})
    </insert>

    <delete id="delete" parameterType="java.lang.Long">
        delete from
        <include refid="operate_table"/>
        where
        id in (
            <foreach collection="ids" separator="," item="item">
                #{item,jdbcType=BIGINT}
            </foreach>
        )
    </delete>

    <delete id="deleteUserRoleByUserId" parameterType="java.lang.Long">
        delete from
        <include refid="user_role_table"/>
        where
        user_id = #{userId,jdbcType=BIGINT}
    </delete>


    <update id="update" parameterType="user">
        update <include refid="operate_table"/>
        <set>
            <if test='nickname != null and !"".equals(nickname.trim())'>
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test='modifiedTime != null and !"".equals(modifiedTime.trim())'>
                modified_time = #{modifiedTime,jdbcType=DATE},
            </if>
        </set>
        where
        id = #{id,jdbcType=BIGINT}
    </update>

    <select id="listForPage" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="operate_table"/>
        <where>
            and id >= (select id from <include refid="operate_table"/> limit #{offset,jdbcType=BIGINT}, 1)
            <if test='username != null and !"".equals(username.trim())'>
                and username like CONCAT(CONCAT('%', #{username,jdbcType=VARCHAR}), '%')
            </if>
            <if test='nickname != null and !"".equals(nickname.trim())'>
                and nickname like CONCAT(CONCAT('%', #{nickname,jdbcType=VARCHAR}), '%')
            </if>
        </where>
        /* order by id desc, username desc*/
        limit #{pageSize,jdbcType=BIGINT}

    </select>

    <select id="listPageCount" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(1) from
        <include refid="operate_table"/>
        <where>
            <if test='username != null and !"".equals(username.trim())'>
                and username like CONCAT(CONCAT('%', #{username,jdbcType=VARCHAR}), '%')
            </if>
            <if test='nickname != null and !"".equals(nickname.trim())'>
                and nickname like CONCAT(CONCAT('%', #{nickname,jdbcType=VARCHAR}), '%')
            </if>
        </where>
    </select>

    <select id="getUserByUsername" parameterType="java.lang.String" resultType="user">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="operate_table"/>
        where username = #{username,jdbcType=VARCHAR}
    </select>


    <select id="getByKey" parameterType="Long" resultMap="User_Role_ResultMap" >
        select  <include refid="User_Role_Column_List"/>
        from tb_sys_user_info u
        left outer join tb_sys_user_role ur
            on u.id = ur.user_id
        left outer join tb_sys_role r
            on r.id = ur.role_id
        where u.id =#{id,jdbcType=BIGINT}
    </select>

</mapper>